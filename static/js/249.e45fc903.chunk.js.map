{"version":3,"file":"static/js/249.e45fc903.chunk.js","mappings":"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","sources":["webpack://my-mind/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-mind/./src/components/Dialogs/Dialog/DialogsWithFriend.module.css?902c","components/Dialogs/Dialog/DialogsWithFriend.jsx","webpack://my-mind/./src/components/Dialogs/Messages/Messages.module.css?2673","components/Dialogs/Messages/Messages.jsx","webpack://my-mind/./src/components/Dialogs/SendMessage/SendMessage.module.css?7882","components/Dialogs/SendMessage/SendMessageForm.jsx","components/Dialogs/SendMessage/SendMessage.jsx","components/Dialogs/SendMessage/SendMessageContainer.jsx","components/Dialogs/Dialogs.jsx","hoc/authHOC.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ps72K\",\"dialogs_left_part\":\"Dialogs_dialogs_left_part__EFSVi\",\"messages_right_part\":\"Dialogs_messages_right_part__Hts4X\",\"m_messages\":\"Dialogs_m_messages__GD5Fj\",\"f_messages\":\"Dialogs_f_messages__5W+5I\",\"send_message\":\"Dialogs_send_message__LHUAq\",\"active\":\"Dialogs_active__hQWTE\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs_general\":\"DialogsWithFriend_dialogs_general__sy2I4\",\"avatar\":\"DialogsWithFriend_avatar__bU8oX\",\"name_friend\":\"DialogsWithFriend_name_friend__aPlCw\",\"active\":\"DialogsWithFriend_active__q9LRA\",\"onlineIndicator\":\"DialogsWithFriend_onlineIndicator__o7OgB\",\"unreadCount\":\"DialogsWithFriend_unreadCount__sMPAe\"};","import { NavLink } from \"react-router-dom\";\r\nimport m from \"./DialogsWithFriend.module.css\";\r\nconst teg_active = ({ isActive }) => (isActive ? m.active : \"xui\");\r\nconst DialogsWithFriend = (props) => {\r\n  return (\r\n    <div className={m.dialogs_general}>\r\n      <img src={`${props.src}`} alt=\"avatar\" className={m.avatar} />\r\n      <div className={m.name_friend}>\r\n        <NavLink to={`/dialogs/${props.path}}`} className={teg_active}>\r\n          {props.name}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsWithFriend;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Messages_message__nztck\",\"my_message\":\"Messages_my_message__NJs8v\",\"friend_message\":\"Messages_friend_message__U8g2D\",\"messageAppear\":\"Messages_messageAppear__PJws-\"};","import m from \"./Messages.module.css\";\r\n\r\nconst Messages = (props) => {\r\n  const messageClass = props.isMyMessage ? m.my_message : m.friend_message;\r\n\r\n  return <div className={`${m.message} ${messageClass}`}>{props.message}</div>;\r\n};\r\n\r\nexport default Messages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"SendMessage_button__PCv96\",\"div_button\":\"SendMessage_div_button__oaNvM\"};","import React from \"react\";\r\nimport m from \"./SendMessage.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { FieldValidator } from \"../../../validators/FieldValidators\";\r\nimport { maxLength, minValue, required } from \"../../../validators/required\";\r\n\r\nconst SendMessageForm = (props) => {\r\n  const maxLength30 = maxLength(30);\r\n\r\n  const minLength3 = minValue(3);\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={m.send}>\r\n        <div className={m.textarea}>\r\n          <Field\r\n            name=\"sendMessage\"\r\n            component={FieldValidator}\r\n            type=\"text\"\r\n            placeholder=\"Write message for your friend\"\r\n            validate={[required, maxLength30, minLength3]}\r\n            typeComponent=\"textarea\"\r\n          />\r\n        </div>\r\n        <div className={m.div_button}>\r\n          <button className={m.button}>Send</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SendMessageFormRedux = reduxForm({\r\n  form: \"sendMessageForFriend\",\r\n})(SendMessageForm);\r\n\r\nexport default SendMessageFormRedux;\r\n","import React from \"react\";\r\nimport m from \"./SendMessage.module.css\";\r\n\r\nimport SendMessageFormRedux from \"./SendMessageForm\";\r\n\r\nconst SendMessage = (props) => {\r\n  // let text = React.createRef(); здесь без рефок\r\n\r\n  // let addMessage = () => {\r\n  //   props.addMyMessage();\r\n  //   // props.dispatch(addMyMessage());\r\n  // };\r\n\r\n  // let onGetSymbol = (e) => {\r\n  //   let target = e.target.value;\r\n  //   props.get(target);\r\n  //props.dispatch(getSymbolForAddMyMessage(target));\r\n\r\n  const sendMessage = (values) => {\r\n    console.log(values.sendMessage);\r\n    props.addMyMessage(values.sendMessage);\r\n    values.sendMessage = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={m.send_message}>\r\n      <SendMessageFormRedux onSubmit={sendMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  addMyMessage,\r\n  getSymbolForAddMyMessage,\r\n} from \"../../../reducer/MessagePageReducer\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst SendMessageContainer = () => {\r\n  let state = useSelector((state) => state.dialogsPage);\r\n  let dispatch = useDispatch();\r\n\r\n  let addMessage = (sendMessage) => {\r\n    dispatch(addMyMessage(sendMessage));\r\n  };\r\n\r\n  let get = (target) => {\r\n    dispatch(getSymbolForAddMyMessage(target));\r\n  };\r\n\r\n  return (\r\n    <SendMessage\r\n      addMyMessage={addMessage}\r\n      get={get}\r\n      sendMessage={state.sendMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SendMessageContainer;\r\n","import m from \"./Dialogs.module.css\";\r\nimport DialogsWithFriend from \"./Dialog/DialogsWithFriend\";\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nimport SendMessageContainer from \"./SendMessage/SendMessageContainer\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Dialogs = () => {\r\n  const state = useSelector((state) => state.dialogsPage);\r\n\r\n  let processedArrDataFriend = state.friends.map((dialog) => (\r\n    <DialogsWithFriend\r\n      name={dialog.name}\r\n      path={dialog.path}\r\n      src={dialog.src}\r\n      id={dialog.id}\r\n      key={dialog.id}\r\n    />\r\n  ));\r\n\r\n  let processedArrDataMessages = state.messages.map((m) => (\r\n    <Messages message={m.message} id={m.id} key={m.id} isMyMessage={false} />\r\n  ));\r\n\r\n  let processedArrDataMyMessages = state.myMessage.map((m) => (\r\n    <Messages message={m.message} id={m.id} key={m.id} isMyMessage={true} />\r\n  ));\r\n\r\n  return (\r\n    <div className={m.dialogs}>\r\n      <div className={m.dialogs_left_part}>\r\n        <h3>Dialogs</h3>\r\n        {processedArrDataFriend}\r\n      </div>\r\n\r\n      <div className={m.messages_right_part}>\r\n        <div className={m.messages_container}>\r\n          {processedArrDataMyMessages}\r\n          {processedArrDataMessages}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={m.send_message}>\r\n        <SendMessageContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport let AuthHoc = (Component) => {\r\n  const checkAuth = useSelector((state) => state.auth.isAuth);\r\n\r\n  class NavigateComponent extends React.Component {\r\n    render() {\r\n      return checkAuth ? (\r\n        <Component {...this.props} />\r\n      ) : (\r\n        <Navigate to=\"/login/\" />\r\n      );\r\n    }\r\n  }\r\n  return NavigateComponent;\r\n};\r\n","import React from \"react\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\nimport { AuthHoc } from \"../../hoc/authHOC\";\r\n\r\nconst DialogsContainer = () => {\r\n  let DialogsWithAuthCheck = AuthHoc(Dialogs);\r\n\r\n  return <DialogsWithAuthCheck />;\r\n};\r\n\r\nexport default DialogsContainer;\r\n"],"names":["teg_active","_ref","isActive","m","props","_jsxs","className","children","_jsx","src","concat","alt","NavLink","to","path","name","messageClass","isMyMessage","message","reduxForm","form","maxLength30","maxLength","minLength3","minValue","onSubmit","handleSubmit","send","textarea","Field","component","FieldValidator","type","placeholder","validate","required","typeComponent","div_button","button","send_message","SendMessageFormRedux","values","console","log","sendMessage","addMyMessage","SendMessageContainer","state","useSelector","dialogsPage","dispatch","useDispatch","SendMessage","get","target","getSymbolForAddMyMessage","Dialogs","processedArrDataFriend","friends","map","dialog","DialogsWithFriend","id","processedArrDataMessages","messages","Messages","processedArrDataMyMessages","myMessage","dialogs","dialogs_left_part","messages_right_part","messages_container","AuthHoc","Component","checkAuth","auth","isAuth","NavigateComponent","React","render","_objectSpread","this","Navigate","DialogsContainer","DialogsWithAuthCheck"],"sourceRoot":""}